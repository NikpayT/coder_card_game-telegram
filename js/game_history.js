// js/game_history.js

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö ---

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç—ã –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Ä–µ–∫–æ—Ä–¥–æ–≤ –≤ gameState –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã.
 */
function initHistoryAndRecords() {
    if (!gameState) return;
    
    // –ò—Å—Ç–æ—Ä–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—É–±–∞ –∏–≥—Ä–æ–∫–∞
    gameState.clubHistory = {
        trophies: [], // –°–ø–∏—Å–æ–∫ —Ç—Ä–æ—Ñ–µ–µ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ß–µ–º–ø–∏–æ–Ω –õ–∏–≥–∏ (–°–µ–∑–æ–Ω 1)"
        seasonBySeason: [], // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Å–µ–∑–æ–Ω—É
        records: {
            biggestWin: { score: "0-0", opponent: "", season: 0 },
            biggestLoss: { score: "0-0", opponent: "", season: 0 },
            topScorer: { name: "", goals: 0, season: 0 } // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –∫–ª—É–±–Ω—ã–π —Ä–µ–∫–æ—Ä–¥
        }
    };

    // –û–±—â–∏–µ —Ä–µ–∫–æ—Ä–¥—ã –≤—Å–µ–π –ª–∏–≥–∏
    gameState.leagueRecords = {
        biggestWin: { score: "0-0", teams: "", season: 0 },
        mostGoalsInMatch: { goals: 0, teams: "", score: "0-0", season: 0 },
        seasonTopScorer: { name: "", team: "", goals: 0, season: 0 } // –ë—É–¥–µ—Ç —Å–ª–æ–∂–Ω–æ, –ø–æ–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–º
    };
    
    console.log("–ú–æ–¥—É–ª—å –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Ä–µ–∫–æ—Ä–¥–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.");
}


// --- –§—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö ---

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∫–ª—É–±–∞ –≤ –∫–æ–Ω—Ü–µ —Å–µ–∑–æ–Ω–∞.
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ endCurrentSeason() –≤ game_logic_core.js
 * @param {Array} leagueStandings - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã.
 */
function updateHistoryAfterSeason(leagueStandings) {
    if (!gameState || !gameState.clubHistory || !gameState.userTeam) return;

    const userTeamName = gameState.userTeam.name;
    const userTeamPosition = leagueStandings.findIndex(t => t.name === userTeamName) + 1;

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–µ–∑–æ–Ω–∞
    gameState.clubHistory.seasonBySeason.push({
        season: gameState.currentSeason,
        leaguePosition: userTeamPosition,
        points: leagueStandings[userTeamPosition - 1].Pts
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —á–µ–º–ø–∏–æ–Ω—Å—Ç–≤–æ
    if (userTeamPosition === 1) {
        const trophy = `–ß–µ–º–ø–∏–æ–Ω –õ–∏–≥–∏ (–°–µ–∑–æ–Ω ${gameState.currentSeason})`;
        gameState.clubHistory.trophies.push(trophy);
        addNews('generic', `üèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ! –ö–ª—É–± ${userTeamName} –¥–æ–±–∞–≤–∏–ª —Ç—Ä–æ—Ñ–µ–π –≤ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é: ${trophy}.`);
    }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–∫–æ—Ä–¥—ã (–∫–ª—É–±–Ω—ã–µ –∏ –ª–∏–≥–∏) –ø–æ—Å–ª–µ –ö–ê–ñ–î–û–ì–û –º–∞—Ç—á–∞.
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ finalizeMatchSimulation() –≤ game_logic_match_sim.js
 * @param {object} match - –û–±—ä–µ–∫—Ç —Å—ã–≥—Ä–∞–Ω–Ω–æ–≥–æ –º–∞—Ç—á–∞.
 */
function updateRecordsAfterMatch(match) {
    if (!gameState || !match.played) return;

    // --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–æ—Ä–¥–æ–≤ –ª–∏–≥–∏ ---
    const totalGoals = match.homeScore + match.awayScore;
    if (totalGoals > gameState.leagueRecords.mostGoalsInMatch.goals) {
        gameState.leagueRecords.mostGoalsInMatch = {
            goals: totalGoals,
            teams: `${match.homeTeam} vs ${match.awayTeam}`,
            score: `${match.homeScore}-${match.awayScore}`,
            season: gameState.currentSeason
        };
    }

    const scoreDiff = Math.abs(match.homeScore - match.awayScore);
    const currentBiggestWinDiff = parseInt(gameState.leagueRecords.biggestWin.score.split('-')[0]) - parseInt(gameState.leagueRecords.biggestWin.score.split('-')[1]);
    
    if (scoreDiff > Math.abs(currentBiggestWinDiff)) {
        gameState.leagueRecords.biggestWin = {
            score: `${match.homeScore}-${match.awayScore}`,
            teams: `${match.homeTeam} vs ${match.awayTeam}`,
            season: gameState.currentSeason
        };
    }
    
    // --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–æ—Ä–¥–æ–≤ –∫–ª—É–±–∞ –∏–≥—Ä–æ–∫–∞ ---
    if (match.isUserMatch) {
        const userTeamName = gameState.userTeam.name;
        let userScore, opponentScore, opponentName;

        if (match.homeTeam === userTeamName) {
            userScore = match.homeScore;
            opponentScore = match.awayScore;
            opponentName = match.awayTeam;
        } else {
            userScore = match.awayScore;
            opponentScore = match.homeScore;
            opponentName = match.homeTeam;
        }

        const userBiggestWinDiff = parseInt(gameState.clubHistory.records.biggestWin.score.split('-')[0]) - parseInt(gameState.clubHistory.records.biggestWin.score.split('-')[1]);
        if (userScore > opponentScore && (userScore - opponentScore) > userBiggestWinDiff) {
            gameState.clubHistory.records.biggestWin = {
                score: `${userScore}-${opponentScore}`,
                opponent: opponentName,
                season: gameState.currentSeason
            };
        }

        const userBiggestLossDiff = parseInt(gameState.clubHistory.records.biggestLoss.score.split('-')[1]) - parseInt(gameState.clubHistory.records.biggestLoss.score.split('-')[0]);
        if (opponentScore > userScore && (opponentScore - userScore) > userBiggestLossDiff) {
            gameState.clubHistory.records.biggestLoss = {
                score: `${userScore}-${opponentScore}`,
                opponent: opponentName,
                season: gameState.currentSeason
            };
        }
    }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç "—Ä–µ–∞–∫—Ü–∏—é –°–ú–ò" –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–∞—Ç—á–∞.
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ finalizeMatchSimulation() –≤ game_logic_match_sim.js
 * @param {object} match - –û–±—ä–µ–∫—Ç —Å—ã–≥—Ä–∞–Ω–Ω–æ–≥–æ –º–∞—Ç—á–∞.
 */
function generateMediaReaction(match) {
    if (!match.isUserMatch) return; // –¢–æ–ª—å–∫–æ –¥–ª—è –º–∞—Ç—á–µ–π –∏–≥—Ä–æ–∫–∞

    const userTeamName = gameState.userTeam.name;
    let userScore, opponentScore, location;

    if (match.homeTeam === userTeamName) {
        userScore = match.homeScore;
        opponentScore = match.awayScore;
        location = "–¥–æ–º–∞";
    } else {
        userScore = match.awayScore;
        opponentScore = match.homeScore;
        location = "–≤ –≥–æ—Å—Ç—è—Ö";
    }

    const diff = userScore - opponentScore;
    let headline = "";

    if (diff > 3) {
        headline = `–°–µ–Ω—Å–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–∞–∑–≥—Ä–æ–º! ${userTeamName} —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ ${location} —Å–æ —Å—á–µ—Ç–æ–º ${userScore}-${opponentScore}!`;
    } else if (diff > 0) {
        headline = `–£–≤–µ—Ä–µ–Ω–Ω–∞—è –ø–æ–±–µ–¥–∞! ${userTeamName} –æ–±—ã–≥—Ä—ã–≤–∞–µ—Ç —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ –∏ –∑–∞–±–∏—Ä–∞–µ—Ç 3 –æ—á–∫–∞.`;
    } else if (diff === 0) {
        headline = `–ë–æ–µ–≤–∞—è –Ω–∏—á—å—è. –ö–æ–º–∞–Ω–¥—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã—è–≤–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –ø–æ–¥–µ–ª–∏–≤ –æ—á–∫–∏.`;
    } else if (diff > -4) {
        headline = `–û–±–∏–¥–Ω–æ–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ. ${userTeamName} —É—Å—Ç—É–ø–∞–µ—Ç –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ–º –º–∞—Ç—á–µ.`;
    } else {
        headline = `–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞! ${userTeamName} —Ç–µ—Ä–ø–∏—Ç —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ ${location}.`;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç—å —Å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º —Ç–∏–ø–æ–º –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
    addNews('media_headline', headline);
}