// game_data.js - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö SQL-—Ñ—É–Ω–∫—Ü–∏–π –∏ –∏—Ö —á–∞—Å—Ç–µ–π, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
const ALL_CODE_PARTS = [
    {
        id: 'sql_select',
        name: 'SELECT',
        emoji: 'üîç',
        description: '–í—ã–±–∏—Ä–∞–µ—Ç —Å—Ç–æ–ª–±—Ü—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.',
        example: 'SELECT column1, column2 FROM table_name;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_from',
        name: 'FROM',
        emoji: 'üì¶',
        description: '–£–∫–∞–∑—ã–≤–∞–µ—Ç, –∏–∑ –∫–∞–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ.',
        example: 'SELECT * FROM Customers;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_where',
        name: 'WHERE',
        emoji: 'üéØ',
        description: '–§–∏–ª—å—Ç—Ä—É–µ—Ç –∑–∞–ø–∏—Å–∏, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º —É—Å–ª–æ–≤–∏–∏.',
        example: 'SELECT * FROM Products WHERE Price > 50;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_insert_into',
        name: 'INSERT INTO',
        emoji: '‚ûï',
        description: '–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É.',
        example: 'INSERT INTO Customers (Name, City) VALUES (\'Alice\', \'New York\');',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_values',
        name: 'VALUES',
        emoji: 'üî¢',
        description: '–£–∫–∞–∑—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ —Å—Ç–æ–ª–±—Ü—ã.',
        example: 'INSERT INTO Orders (CustomerID, OrderDate) VALUES (1, \'2023-01-15\');',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_update',
        name: 'UPDATE',
        emoji: '‚úèÔ∏è',
        description: '–ò–∑–º–µ–Ω—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ.',
        example: 'UPDATE Products SET Price = 100 WHERE ProductID = 1;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_set',
        name: 'SET',
        emoji: 'üîÑ',
        description: '–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—Ç–æ–ª–±—Ü–æ–≤ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.',
        example: 'UPDATE Employees SET Salary = 60000 WHERE EmployeeID = 5;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_delete_from',
        name: 'DELETE FROM',
        emoji: '‚ùå',
        description: '–£–¥–∞–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã.',
        example: 'DELETE FROM Orders WHERE OrderID = 101;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_create_table',
        name: 'CREATE TABLE',
        emoji: 'üß±',
        description: '–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.',
        example: 'CREATE TABLE Users (UserID INT, UserName VARCHAR(255));',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_int',
        name: 'INT (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)',
        emoji: 'üî¢',
        description: '–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.',
        example: 'CREATE TABLE Products (ProductID INT, ProductName VARCHAR(255));',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_varchar',
        name: 'VARCHAR (—Ç–µ–∫—Å—Ç)',
        emoji: 'üìù',
        description: '–°—Ç—Ä–æ–∫–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª–∏–Ω—ã.',
        example: 'CREATE TABLE Users (UserName VARCHAR(50));',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_date',
        name: 'DATE (–¥–∞—Ç–∞)',
        emoji: 'üìÖ',
        description: '–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç—ã.',
        example: 'CREATE TABLE Orders (OrderDate DATE);',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_primary_key',
        name: 'PRIMARY KEY',
        emoji: 'üîë',
        description: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ.',
        example: 'CREATE TABLE Customers (CustomerID INT PRIMARY KEY);',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_foreign_key',
        name: 'FOREIGN KEY',
        emoji: 'üîó',
        description: '–°—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á –≤ –¥—Ä—É–≥–æ–π —Ç–∞–±–ª–∏—Ü–µ.',
        example: 'CONSTRAINT FK_OrdersCustomers FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID);',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_join',
        name: 'JOIN',
        emoji: 'ü§ù',
        description: '–û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫–∏ –∏–∑ –¥–≤—É—Ö –∏–ª–∏ –±–æ–ª–µ–µ —Ç–∞–±–ª–∏—Ü –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ –º–µ–∂–¥—É –Ω–∏–º–∏.',
        example: 'SELECT Orders.OrderID, Customers.CustomerName FROM Orders JOIN Customers ON Orders.CustomerID = Customers.CustomerID;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_inner_join',
        name: 'INNER JOIN',
        emoji: 'ü§ù',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö.',
        example: 'SELECT A.col1, B.col2 FROM TableA A INNER JOIN TableB B ON A.id = B.id;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_left_join',
        name: 'LEFT JOIN',
        emoji: '‚¨ÖÔ∏è',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ª–µ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã –∏ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ –∏–∑ –ø—Ä–∞–≤–æ–π.',
        example: 'SELECT A.col1, B.col2 FROM TableA A LEFT JOIN TableB B ON A.id = B.id;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_right_join',
        name: 'RIGHT JOIN',
        emoji: '‚û°Ô∏è',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ø—Ä–∞–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã –∏ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ –∏–∑ –ª–µ–≤–æ–π.',
        example: 'SELECT A.col1, B.col2 FROM TableA A RIGHT JOIN TableB B ON A.id = B.id;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_full_outer_join',
        name: 'FULL OUTER JOIN',
        emoji: '‚ÜîÔ∏è',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–π –∏–∑ —Ç–∞–±–ª–∏—Ü.',
        example: 'SELECT A.col1, B.col2 FROM TableA A FULL OUTER JOIN TableB B ON A.id = B.id;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_group_by',
        name: 'GROUP BY',
        emoji: 'üìä',
        description: '–ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫–∏, –∏–º–µ—é—â–∏–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–∞—Ö.',
        example: 'SELECT Country, COUNT(CustomerID) FROM Customers GROUP BY Country;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_having',
        name: 'HAVING',
        emoji: 'üìè',
        description: '–§–∏–ª—å—Ç—Ä—É–µ—Ç –≥—Ä—É–ø–ø—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é GROUP BY.',
        example: 'SELECT Country, COUNT(CustomerID) FROM Customers GROUP BY Country HAVING COUNT(CustomerID) > 5;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_order_by',
        name: 'ORDER BY',
        emoji: '‚ÜïÔ∏è',
        description: '–°–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π –Ω–∞–±–æ—Ä –ø–æ –æ–¥–Ω–æ–º—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Å—Ç–æ–ª–±—Ü–∞–º.',
        example: 'SELECT ProductName, Price FROM Products ORDER BY Price DESC;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_asc',
        name: 'ASC (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)',
        emoji: '‚¨ÜÔ∏è',
        description: '–°–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –≤–æ–∑—Ä–∞—Å—Ç–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ.',
        example: 'SELECT ProductName FROM Products ORDER BY ProductName ASC;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_desc',
        name: 'DESC (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)',
        emoji: '‚¨áÔ∏è',
        description: '–°–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —É–±—ã–≤–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ.',
        example: 'SELECT ProductName FROM Products ORDER BY ProductName DESC;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_count',
        name: 'COUNT()',
        emoji: '‚àë',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —É—Å–ª–æ–≤–∏—é.',
        example: 'SELECT COUNT(ProductID) FROM Products;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_sum',
        name: 'SUM()',
        emoji: '‚ûï',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â—É—é —Å—É–º–º—É —á–∏—Å–ª–æ–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞.',
        example: 'SELECT SUM(Quantity) FROM OrderDetails;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_avg',
        name: 'AVG()',
        emoji: 'üßÆ',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–æ–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞.',
        example: 'SELECT AVG(Price) FROM Products;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_min',
        name: 'MIN()',
        emoji: 'üîΩ',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∏–º–µ–Ω—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞.',
        example: 'SELECT MIN(Price) FROM Products;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_max',
        name: 'MAX()',
        emoji: 'üîº',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞.',
        example: 'SELECT MAX(Salary) FROM Employees;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_like',
        name: 'LIKE',
        emoji: 'üé≠',
        description: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ WHERE –¥–ª—è –ø–æ–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–∞ –≤ —Å—Ç–æ–ª–±—Ü–µ.',
        example: 'SELECT * FROM Customers WHERE CustomerName LIKE \'A%\';',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_wildcard_percent',
        name: '% (Wildcard)',
        emoji: '‚ú®',
        description: '–ó–∞–º–µ–Ω—è–µ—Ç –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ LIKE.',
        example: 'SELECT * FROM Products WHERE ProductName LIKE \'%SQL%\';',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_wildcard_underscore',
        name: '_ (Wildcard)',
        emoji: '‚ûñ',
        description: '–ó–∞–º–µ–Ω—è–µ—Ç –æ–¥–∏–Ω –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –≤ LIKE.',
        example: 'SELECT * FROM Customers WHERE City LIKE \'L_ndon\';',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_in',
        name: 'IN',
        emoji: '‚û°Ô∏è',
        description: '–ü–æ–∑–≤–æ–ª—è–µ—Ç —É–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ —É—Å–ª–æ–≤–∏–∏ WHERE.',
        example: 'SELECT * FROM Orders WHERE ShipCity IN (\'London\', \'Paris\');',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_between',
        name: 'BETWEEN',
        emoji: '‚ÜîÔ∏è',
        description: '–í—ã–±–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.',
        example: 'SELECT * FROM Products WHERE Price BETWEEN 10 AND 20;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_distinct',
        name: 'DISTINCT',
        emoji: '‚ú®',
        description: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.',
        example: 'SELECT DISTINCT Country FROM Customers;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_alias',
        name: 'AS (–ø—Å–µ–≤–¥–æ–Ω–∏–º)',
        emoji: 'üìõ',
        description: '–ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏–º—è —Ç–∞–±–ª–∏—Ü–µ –∏–ª–∏ —Å—Ç–æ–ª–±—Ü—É.',
        example: 'SELECT CustomerName AS Name FROM Customers;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_case',
        name: 'CASE',
        emoji: '‚ùì',
        description: '–£—Å–ª–æ–≤–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∫–∞–∫ IF-THEN-ELSE.',
        example: 'SELECT ProductName, CASE WHEN Price > 100 THEN \'Expensive\' ELSE \'Cheap\' END AS PriceCategory FROM Products;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_union',
        name: 'UNION',
        emoji: '‚ûï',
        description: '–û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–µ –Ω–∞–±–æ—Ä—ã –¥–≤—É—Ö –∏–ª–∏ –±–æ–ª–µ–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ SELECT.',
        example: 'SELECT City FROM Customers UNION SELECT City FROM Suppliers;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_limit',
        name: 'LIMIT',
        emoji: '‚úÇÔ∏è',
        description: '–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö —Å—Ç—Ä–æ–∫. –•–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ –¥–ª—è MySQL/PostgreSQL.',
        example: 'SELECT * FROM Customers LIMIT 10;',
        type: 'SQL',
        rarity: 'uncommon',
        dbType: ['mysql', 'postgresql']
    },
    {
        id: 'sql_top',
        name: 'TOP',
        emoji: 'üîù',
        description: '–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö —Å—Ç—Ä–æ–∫. –•–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ –¥–ª—è SQL Server.',
        example: 'SELECT TOP 10 * FROM Customers;',
        type: 'SQL',
        rarity: 'uncommon',
        dbType: ['sqlserver']
    },
    {
        id: 'sql_offset',
        name: 'OFFSET',
        emoji: '‚û°Ô∏è',
        description: '–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º. –ß–∞—Å—Ç–æ —Å LIMIT –∏–ª–∏ FETCH.',
        example: 'SELECT * FROM Customers ORDER BY CustomerID LIMIT 10 OFFSET 20; (PostgreSQL/MySQL)',
        type: 'SQL',
        rarity: 'rare',
        dbType: ['mysql', 'postgresql']
    },
    {
        id: 'sql_alter_table',
        name: 'ALTER TABLE',
        emoji: 'üèóÔ∏è',
        description: '–î–æ–±–∞–≤–ª—è–µ—Ç, —É–¥–∞–ª—è–µ—Ç –∏–ª–∏ –∏–∑–º–µ–Ω—è–µ—Ç —Å—Ç–æ–ª–±—Ü—ã –≤ —Ç–∞–±–ª–∏—Ü–µ.',
        example: 'ALTER TABLE Customers ADD Email VARCHAR(255);',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_add_column',
        name: 'ADD COLUMN',
        emoji: '‚ûï',
        description: '–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –≤ —Ç–∞–±–ª–∏—Ü—É.',
        example: 'ALTER TABLE Employees ADD COLUMN StartDate DATE;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_drop_column',
        name: 'DROP COLUMN',
        emoji: 'üóëÔ∏è',
        description: '–£–¥–∞–ª—è–µ—Ç —Å—Ç–æ–ª–±–µ—Ü –∏–∑ —Ç–∞–±–ª–∏—Ü—ã.',
        example: 'ALTER TABLE Products DROP COLUMN Description;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_drop_table',
        name: 'DROP TABLE',
        emoji: 'üí•',
        description: '–£–¥–∞–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.',
        example: 'DROP TABLE Shippers;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_truncate_table',
        name: 'TRUNCATE TABLE',
        emoji: 'üßπ',
        description: '–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã.',
        example: 'TRUNCATE TABLE Logs;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_create_database',
        name: 'CREATE DATABASE',
        emoji: 'üè¢',
        description: '–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.',
        example: 'CREATE DATABASE MyNewDB;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_drop_database',
        name: 'DROP DATABASE',
        emoji: 'üí£',
        description: '–£–¥–∞–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.',
        example: 'DROP DATABASE OldDB;',
        type: 'SQL',
        rarity: 'legendary'
    },
    {
        id: 'sql_index',
        name: 'CREATE INDEX',
        emoji: 'üìñ',
        description: '–°–æ–∑–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤.',
        example: 'CREATE INDEX idx_lastname ON Persons (LastName);',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_union_all',
        name: 'UNION ALL',
        emoji: '‚ûï‚ûï',
        description: '–û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–µ –Ω–∞–±–æ—Ä—ã, –≤–∫–ª—é—á–∞—è –¥—É–±–ª–∏–∫–∞—Ç—ã.',
        example: 'SELECT City FROM Customers UNION ALL SELECT City FROM Suppliers;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_exists',
        name: 'EXISTS',
        emoji: '‚ùì',
        description: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ª—é–±—ã—Ö —Å—Ç—Ä–æ–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –ø–æ–¥–∑–∞–ø—Ä–æ—Å–æ–º.',
        example: 'SELECT SupplierName FROM Suppliers WHERE EXISTS (SELECT ProductName FROM Products WHERE SupplierId = Suppliers.supplierId AND Price < 20);',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_any_all',
        name: 'ANY / ALL',
        emoji: '‚öñÔ∏è',
        description: 'ANY: TRUE, –µ—Å–ª–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ TRUE –¥–ª—è –õ–Æ–ë–û–ì–û –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π –≤ –ø–æ–¥–∑–∞–ø—Ä–æ—Å–µ. ALL: TRUE, –µ—Å–ª–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ TRUE –¥–ª—è –í–°–ï–• –∑–Ω–∞—á–µ–Ω–∏–π.',
        example: 'SELECT ProductName FROM Products WHERE ProductID = ANY (SELECT ProductID FROM OrderDetails WHERE Quantity > 10);',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_is_null',
        name: 'IS NULL',
        emoji: 'üö´',
        description: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ NULL.',
        example: 'SELECT CustomerName FROM Customers WHERE Address IS NULL;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_is_not_null',
        name: 'IS NOT NULL',
        emoji: '‚úÖ',
        description: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ NULL.',
        example: 'SELECT CustomerName FROM Customers WHERE Address IS NOT NULL;',
        type: 'SQL',
        rarity: 'common'
    },
    {
        id: 'sql_top_n_percent',
        name: 'TOP N PERCENT',
        emoji: 'üéØ%',
        description: '–í—ã–±–∏—Ä–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å—Ç—Ä–æ–∫ —Å–≤–µ—Ä—Ö—É. –•–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ –¥–ª—è SQL Server.',
        example: 'SELECT TOP 50 PERCENT * FROM Customers;',
        type: 'SQL',
        rarity: 'rare',
        dbType: ['sqlserver']
    },
    {
        id: 'sql_rank',
        name: 'RANK()',
        emoji: 'üèÖ',
        description: '–§—É–Ω–∫—Ü–∏—è —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è, –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç —Ä–∞–Ω–≥ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –≤–Ω—É—Ç—Ä–∏ —Ä–∞–∑–¥–µ–ª–∞.',
        example: 'SELECT EmployeeName, Salary, RANK() OVER (ORDER BY Salary DESC) as RankNo FROM Employees;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_dense_rank',
        name: 'DENSE_RANK()',
        emoji: 'üèÜ',
        description: '–§—É–Ω–∫—Ü–∏—è —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞ RANK(), –Ω–æ –±–µ–∑ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –≤ —Ä–∞–Ω–≥–∞—Ö.',
        example: 'SELECT EmployeeName, Salary, DENSE_RANK() OVER (ORDER BY Salary DESC) as DenseRankNo FROM Employees;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_row_number',
        name: 'ROW_NUMBER()',
        emoji: 'üî¢',
        description: '–ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –≤ —Ä–∞–∑–¥–µ–ª–µ.',
        example: 'SELECT ProductName, Price, ROW_NUMBER() OVER (ORDER BY Price) as RowNum FROM Products;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_cte_with',
        name: 'WITH (CTE)',
        emoji: 'üß†',
        description: '–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π, –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (Common Table Expression).',
        example: 'WITH ExpensiveProducts AS (SELECT ProductName, Price FROM Products WHERE Price > 100) SELECT ProductName FROM ExpensiveProducts;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_pivot',
        name: 'PIVOT',
        emoji: 'üîÑ',
        description: '–ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç–æ–ª–±—Ü—ã, –∞–≥—Ä–µ–≥–∏—Ä—É—è –¥–∞–Ω–Ω—ã–µ. –†–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è, –Ω–æ SQL Server –∏ Oracle –∏–º–µ—é—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π.',
        example: 'SELECT Customer, [ProductA], [ProductB] FROM (SELECT Customer, Product, Quantity FROM Sales) AS SourceTable PIVOT (SUM(Quantity) FOR Product IN ([ProductA], [ProductB])) AS PivotTable; (SQL Server)',
        type: 'SQL',
        rarity: 'legendary',
        dbType: ['sqlserver', 'oracle']
    },
    {
        id: 'sql_unpivot',
        name: 'UNPIVOT',
        emoji: '‚ÜîÔ∏è',
        description: '–ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–æ–ª–±—Ü—ã –≤ —Å—Ç—Ä–æ–∫–∏.',
        example: 'SELECT Product, Category, Quantity FROM (SELECT ProductA, ProductB FROM Sales) AS SourceTable UNPIVOT (Quantity FOR Category IN (ProductA, ProductB)) AS UnpivotTable; (SQL Server)',
        type: 'SQL',
        rarity: 'legendary',
        dbType: ['sqlserver', 'oracle']
    },
    {
        id: 'sql_window_function',
        name: 'OVER (Window Function)',
        emoji: 'ü™ü',
        description: '–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–∫–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –ø–æ –Ω–∞–±–æ—Ä—É —Å—Ç—Ä–æ–∫, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–æ–π.',
        example: 'SELECT EmployeeName, Salary, SUM(Salary) OVER (PARTITION BY Department) AS DepartmentTotal FROM Employees;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_left_outer_join',
        name: 'LEFT OUTER JOIN',
        emoji: '‚¨ÖÔ∏èü§ù',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ª–µ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã –∏ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ –∏–∑ –ø—Ä–∞–≤–æ–π. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ LEFT JOIN.',
        example: 'SELECT A.col1, B.col2 FROM TableA A LEFT OUTER JOIN TableB B ON A.id = B.id;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_right_outer_join',
        name: 'RIGHT OUTER JOIN',
        emoji: '‚û°Ô∏èü§ù',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ø—Ä–∞–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã –∏ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ –∏–∑ –ª–µ–≤–æ–π. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ RIGHT JOIN.',
        example: 'SELECT A.col1, B.col2 FROM TableA A RIGHT OUTER JOIN TableB B ON A.id = B.id;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_cross_join',
        name: 'CROSS JOIN',
        emoji: '‚úñÔ∏è',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ–∫–∞—Ä—Ç–æ–≤–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –¥–≤—É—Ö —Ç–∞–±–ª–∏—Ü.',
        example: 'SELECT A.col1, B.col2 FROM TableA A CROSS JOIN TableB B;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_self_join',
        name: 'SELF JOIN',
        emoji: 'üë§ü§ù',
        description: '–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å —Å–∞–º–æ–π —Å–æ–±–æ–π.',
        example: 'SELECT A.EmployeeName AS Employee1, B.EmployeeName AS Employee2 FROM Employees A, Employees B WHERE A.ManagerID = B.EmployeeID;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_subquery',
        name: '–ü–æ–¥–∑–∞–ø—Ä–æ—Å (Subquery)',
        emoji: 'üì¶üîç',
        description: '–ó–∞–ø—Ä–æ—Å –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.',
        example: 'SELECT ProductName FROM Products WHERE Price > (SELECT AVG(Price) FROM Products);',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_exists_subquery',
        name: 'EXISTS (Subquery)',
        emoji: '‚ùìüì¶',
        description: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –ø–æ–¥–∑–∞–ø—Ä–æ—Å–æ–º.',
        example: 'SELECT CustomerName FROM Customers WHERE EXISTS (SELECT OrderID FROM Orders WHERE Customers.CustomerID = Orders.CustomerID);',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_not_exists',
        name: 'NOT EXISTS',
        emoji: 'üö´‚ùì',
        description: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å—Ç—Ä–æ–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –ø–æ–¥–∑–∞–ø—Ä–æ—Å–æ–º.',
        example: 'SELECT CustomerName FROM Customers WHERE NOT EXISTS (SELECT OrderID FROM Orders WHERE Customers.CustomerID = Orders.CustomerID);',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_create_view',
        name: 'CREATE VIEW',
        emoji: 'üëÅÔ∏è‚Äçüó®Ô∏è',
        description: '–°–æ–∑–¥–∞–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É, –æ—Å–Ω–æ–≤–∞–Ω–Ω—É—é –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å–∞.',
        example: 'CREATE VIEW ActiveCustomers AS SELECT CustomerName, City FROM Customers WHERE IsActive = 1;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_drop_view',
        name: 'DROP VIEW',
        emoji: 'üö´üëÅÔ∏è',
        description: '–£–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ (–≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É).',
        example: 'DROP VIEW ActiveCustomers;',
        type: 'SQL',
        rarity: 'uncommon'
    },
    {
        id: 'sql_stored_procedure',
        name: '–•—Ä–∞–Ω–∏–º–∞—è –ü—Ä–æ—Ü–µ–¥—É—Ä–∞',
        emoji: '‚öôÔ∏è',
        description: '–ù–∞–±–æ—Ä –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ SQL, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ.',
        example: 'CREATE PROCEDURE GetCustomersByCity @City NVARCHAR(50) AS SELECT * FROM Customers WHERE City = @City;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_function',
        name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –§—É–Ω–∫—Ü–∏—è',
        emoji: 'üîß',
        description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–∫–∞–ª—è—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ —Ç–∞–±–ª–∏—Ü—É.',
        example: 'CREATE FUNCTION GetTotalSales (@ProductID INT) RETURNS DECIMAL(10,2) AS BEGIN DECLARE @TotalSales DECIMAL(10,2); SELECT @TotalSales = SUM(Quantity * Price) FROM OrderDetails WHERE ProductID = @ProductID; RETURN @TotalSales; END;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_trigger',
        name: '–¢—Ä–∏–≥–≥–µ—Ä (Trigger)',
        emoji: '‚ö°',
        description: '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–∏–ø —Ö—Ä–∞–Ω–∏–º–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.',
        example: 'CREATE TRIGGER UpdateStock AFTER INSERT ON OrderDetails FOR EACH ROW UPDATE Products SET Stock = Stock - NEW.Quantity WHERE ProductID = NEW.ProductID;',
        type: 'SQL',
        rarity: 'legendary'
    },
    {
        id: 'sql_transaction_begin',
        name: 'BEGIN TRANSACTION',
        emoji: 'üé¨',
        description: '–ù–∞—á–∏–Ω–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é, –≥—Ä—É–ø–ø–∏—Ä—É—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ.',
        example: 'BEGIN TRANSACTION; INSERT INTO Accounts ...;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_transaction_commit',
        name: 'COMMIT',
        emoji: '‚úÖ',
        description: '–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–¥–µ–ª–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—É—â–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.',
        example: 'COMMIT;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_transaction_rollback',
        name: 'ROLLBACK',
        emoji: '‚Ü©Ô∏è',
        description: '–û—Ç–º–µ–Ω—è–µ—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–¥–µ–ª–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—É—â–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.',
        example: 'ROLLBACK;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_grant',
        name: 'GRANT',
        emoji: 'üîë',
        description: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.',
        example: 'GRANT SELECT ON Customers TO \'user1\';',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_revoke',
        name: 'REVOKE',
        emoji: 'üö´üîë',
        description: '–û—Ç–∑—ã–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
        example: 'REVOKE SELECT ON Products FROM \'user1\';',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_deny',
        name: 'DENY',
        emoji: '‚õî',
        description: '–ó–∞–ø—Ä–µ—â–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.',
        example: 'DENY DELETE ON Orders TO \'user2\';',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_alter_index',
        name: 'ALTER INDEX',
        emoji: 'üîßüìñ',
        description: '–ò–∑–º–µ–Ω—è–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞.',
        example: 'ALTER INDEX idx_lastname ON Persons REBUILD;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_drop_index',
        name: 'DROP INDEX',
        emoji: 'üóëÔ∏èüìñ',
        description: '–£–¥–∞–ª—è–µ—Ç –∏–Ω–¥–µ–∫—Å.',
        example: 'DROP INDEX idx_lastname ON Persons;',
        type: 'SQL',
        rarity: 'rare'
    },
    {
        id: 'sql_top_with_ties',
        name: 'TOP WITH TIES',
        emoji: 'üîùüîó',
        description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, –≤–∫–ª—é—á–∞—è —Å—Ç—Ä–æ–∫–∏ —Å —Ä–∞–≤–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ç–æ–ø N. (SQL Server)',
        example: 'SELECT TOP 3 WITH TIES ProductName, Price FROM Products ORDER BY Price DESC;',
        type: 'SQL',
        rarity: 'epic',
        dbType: ['sqlserver']
    },
    {
        id: 'sql_partition_by',
        name: 'PARTITION BY',
        emoji: 'üß©',
        description: '–†–∞–∑–¥–µ–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π –Ω–∞–±–æ—Ä –Ω–∞ —Ä–∞–∑–¥–µ–ª—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –æ–∫–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.',
        example: 'SELECT EmployeeName, Department, Salary, AVG(Salary) OVER (PARTITION BY Department) AS AvgDeptSalary FROM Employees;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_lag',
        name: 'LAG()',
        emoji: '‚è™',
        description: '–ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–æ–º –∂–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–º –Ω–∞–±–æ—Ä–µ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è SELF JOIN.',
        example: 'SELECT OrderID, OrderDate, LAG(OrderDate, 1, \'1900-01-01\') OVER (ORDER BY OrderDate) AS PreviousOrderDate FROM Orders;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_lead',
        name: 'LEAD()',
        emoji: '‚è©',
        description: '–ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–æ–º –∂–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–º –Ω–∞–±–æ—Ä–µ.',
        example: 'SELECT OrderID, OrderDate, LEAD(OrderDate, 1, \'2999-12-31\') OVER (ORDER BY OrderDate) AS NextOrderDate FROM Orders;',
        type: 'SQL',
        rarity: 'epic'
    },
    {
        id: 'sql_recursive_cte',
        name: '–†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π CTE',
        emoji: '‚ôæÔ∏èüß†',
        description: 'CTE, –∫–æ—Ç–æ—Ä–æ–µ —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ —Å–µ–±—è, –¥–ª—è –æ–±—Ö–æ–¥–∞ –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏—Ö –∏–ª–∏ –≥—Ä–∞—Ñ–æ–≤—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä. (–°–∏–Ω—Ç–∞–∫—Å–∏—Å WITH RECURSIVE –≤ PostgreSQL/MySQL, –ø—Ä–æ—Å—Ç–æ WITH –≤ SQL Server/Oracle –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–∏)',
        example: 'WITH RECURSIVE EmployeeHierarchy AS (...) SELECT * FROM EmployeeHierarchy;',
        type: 'SQL',
        rarity: 'legendary'
    },
    {
        id: 'sql_materialized_view',
        name: '–ú–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ (MV)',
        emoji: 'üíæüëÅÔ∏è‚Äçüó®Ô∏è',
        description: '–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö—Ä–∞–Ω–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏, –∞ –Ω–µ –≤—ã—á–∏—Å–ª—è–µ—Ç –µ–≥–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑.',
        example: 'CREATE MATERIALIZED VIEW mv_daily_sales AS SELECT OrderDate, SUM(TotalAmount) AS DailySales FROM Orders GROUP BY OrderDate;',
        type: 'SQL',
        rarity: 'legendary'
    },
    {
        id: 'psql_jsonb_ops',
        name: '–û–ø–µ—Ä–∞—Ç–æ—Ä—ã JSONB',
        emoji: 'üìÑ',
        description: '–û–ø–µ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–ø–æ–º –¥–∞–Ω–Ω—ã—Ö JSONB –≤ PostgreSQL (–Ω–∞–ø—Ä–∏–º–µ—Ä, ->, ->>, @>, <@).',
        example: 'SELECT data ->> \'name\' FROM users WHERE data @> \'{"status":"active"}\';',
        type: 'PostgreSQL',
        rarity: 'epic',
        dbType: ['postgresql']
    },
    {
        id: 'ora_decode',
        name: 'DECODE',
        emoji: 'üî¢',
        description: '–§—É–Ω–∫—Ü–∏—è DECODE –≤ Oracle, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è CASE, –Ω–æ —Å –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —É—Å–ª–æ–≤–∏–π.',
        example: 'SELECT DECODE(status, \'A\', \'Active\', \'I\', \'Inactive\', \'Unknown\') FROM employees;',
        type: 'Oracle',
        rarity: 'rare',
        dbType: ['oracle']
    },
    { id: 'psql_generate_series', name: 'generate_series()', emoji: 'üìà', description: '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä—è–¥ –∑–Ω–∞—á–µ–Ω–∏–π. PostgreSQL.', example: 'SELECT generate_series(1, 5);', type: 'PostgreSQL', rarity: 'uncommon', dbType: ['postgresql'] },
    { id: 'psql_array_agg', name: 'array_agg()', emoji: 'üì¶', description: '–ê–≥—Ä–µ–≥–∞—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —Å–æ–±–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤. PostgreSQL.', example: 'SELECT array_agg(product_name) FROM products GROUP BY category_id;', type: 'PostgreSQL', rarity: 'rare', dbType: ['postgresql'] },
    { id: 'psql_ilike', name: 'ILIKE', emoji: 'üé≠i', description: '–†–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π LIKE. PostgreSQL.', example: 'SELECT * FROM customers WHERE name ILIKE \'john%\';', type: 'PostgreSQL', rarity: 'common', dbType: ['postgresql'] },
    { id: 'psql_distinct_on', name: 'DISTINCT ON ()', emoji: '‚ú®üéØ', description: '–í—ã–±–∏—Ä–∞–µ—Ç –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. PostgreSQL.', example: 'SELECT DISTINCT ON (category_id) * FROM products ORDER BY category_id, price DESC;', type: 'PostgreSQL', rarity: 'epic', dbType: ['postgresql'] },
    { id: 'psql_using', name: 'USING (JOIN)', emoji: 'ü§ùüí°', description: '–°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è JOIN, –µ—Å–ª–∏ –∏–º–µ–Ω–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ —Å–æ–≤–ø–∞–¥–∞—é—Ç. PostgreSQL/MySQL.', example: 'SELECT * FROM orders o JOIN customers c USING (customer_id);', type: 'SQL', rarity: 'uncommon', dbType: ['postgresql', 'mysql'] },
    { id: 'mysql_group_concat', name: 'GROUP_CONCAT()', emoji: 'üîóüîó', description: '–ö–æ–Ω–∫–∞—Ç–µ–Ω–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø—ã —Å—Ç—Ä–æ–∫. MySQL.', example: 'SELECT GROUP_CONCAT(product_name SEPARATOR \', \') FROM products GROUP BY category_id;', type: 'MySQL', rarity: 'rare', dbType: ['mysql'] },
    { id: 'mysql_date_format', name: 'DATE_FORMAT()', emoji: 'üìÖ‚úçÔ∏è', description: '–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç. MySQL.', example: 'SELECT DATE_FORMAT(order_date, \'%Y-%m-%d\') FROM orders;', type: 'MySQL', rarity: 'uncommon', dbType: ['mysql'] },
    { id: 'mysql_regexp', name: 'REGEXP / RLIKE', emoji: 'üîçüî¨', description: '–ü–æ–∏—Å–∫ –ø–æ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º—É –≤—ã—Ä–∞–∂–µ–Ω–∏—é. MySQL.', example: 'SELECT * FROM messages WHERE content REGEXP \'error[0-9]+\';', type: 'MySQL', rarity: 'rare', dbType: ['mysql'] },
    { id: 'mysql_straight_join', name: 'STRAIGHT_JOIN', emoji: '‚û°Ô∏èü§ù', description: '–ü—Ä–∏–Ω—É–∂–¥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä —Å–æ–µ–¥–∏–Ω—è—Ç—å —Ç–∞–±–ª–∏—Ü—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. MySQL.', example: 'SELECT * FROM table1 STRAIGHT_JOIN table2 ON table1.id = table2.id;', type: 'MySQL', rarity: 'epic', dbType: ['mysql'] },
    { id: 'sqlserv_getdate', name: 'GETDATE()', emoji: 'üìÖ‚è∞', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è. SQL Server.', example: 'SELECT GETDATE();', type: 'SQL Server', rarity: 'common', dbType: ['sqlserver'] },
    { id: 'sqlserv_string_split', name: 'STRING_SPLIT()', emoji: '‚úÇÔ∏èüìù', description: '–†–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é. SQL Server 2016+.', example: 'SELECT value FROM STRING_SPLIT(\'apple,banana,orange\', \',\');', type: 'SQL Server', rarity: 'uncommon', dbType: ['sqlserver'] },
    { id: 'sqlserv_try_convert', name: 'TRY_CONVERT()', emoji: '‚ùìüîÑ', description: '–ü—ã—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–∏–ø, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç NULL –ø—Ä–∏ –æ—à–∏–±–∫–µ. SQL Server.', example: 'SELECT TRY_CONVERT(INT, \'123x\');', type: 'SQL Server', rarity: 'uncommon', dbType: ['sqlserver'] },
    { id: 'sqlserv_for_xml_path', name: 'FOR XML PATH', emoji: 'üìÑ‚úçÔ∏è', description: '–§–æ—Ä–º–∏—Ä—É–µ—Ç XML –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–∞. SQL Server.', example: 'SELECT name, type FROM sys.objects FOR XML PATH(\'object\'), ROOT(\'objects\');', type: 'SQL Server', rarity: 'epic', dbType: ['sqlserver'] },
    { id: 'sqlserv_merge', name: 'MERGE', emoji: 'üîÑü§ù', description: '–í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ INSERT, UPDATE, DELETE –≤ —Ü–µ–ª–µ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∏—Å—Ö–æ–¥–Ω–æ–π. SQL Server/Oracle.', example: 'MERGE target AS T USING source AS S ON T.id = S.id WHEN MATCHED THEN UPDATE SET ... WHEN NOT MATCHED THEN INSERT ...;', type: 'SQL', rarity: 'epic', dbType: ['sqlserver', 'oracle'] },
    { id: 'ora_sysdate', name: 'SYSDATE', emoji: 'üìÖ‚è∞', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è. Oracle.', example: 'SELECT SYSDATE FROM dual;', type: 'Oracle', rarity: 'common', dbType: ['oracle'] },
    { id: 'ora_nvl', name: 'NVL()', emoji: '‚ùì‚û°Ô∏è', description: '–ó–∞–º–µ–Ω—è–µ—Ç NULL —É–∫–∞–∑–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º. Oracle.', example: 'SELECT NVL(commission_pct, 0) FROM employees;', type: 'Oracle', rarity: 'common', dbType: ['oracle'] },
    { id: 'ora_listagg', name: 'LISTAGG()', emoji: 'üîóüîó', description: '–ê–≥—Ä–µ–≥–∞—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫. Oracle.', example: 'SELECT LISTAGG(last_name, \', \') WITHIN GROUP (ORDER BY last_name) FROM employees;', type: 'Oracle', rarity: 'rare', dbType: ['oracle'] },
    { id: 'ora_connect_by_prior', name: 'CONNECT BY PRIOR', emoji: 'üå≥üîó', description: '–î–ª—è –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤. Oracle.', example: 'SELECT last_name, employee_id, manager_id FROM employees START WITH manager_id IS NULL CONNECT BY PRIOR employee_id = manager_id;', type: 'Oracle', rarity: 'legendary', dbType: ['oracle'] },
    { id: 'ora_flashback_query', name: 'Flashback Query', emoji: '‚è™üï∞Ô∏è', description: '–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø—Ä–æ—à–ª–æ–º. Oracle.', example: 'SELECT * FROM employees AS OF TIMESTAMP (SYSTIMESTAMP - INTERVAL \'1\' HOUR);', type: 'Oracle', rarity: 'legendary', dbType: ['oracle'] },
    { id: 'sql_coalesce', name: 'COALESCE()', emoji: '‚ùì‚û°Ô∏è‚úÖ', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –Ω–µ-NULL –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞.', example: 'SELECT COALESCE(NULL, NULL, \'Default\', \'Value\');', type: 'SQL', rarity: 'common'},
    { id: 'sql_nullif', name: 'NULLIF()', emoji: '‚ùì=üö´', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç NULL, –µ—Å–ª–∏ –¥–≤–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–≤–Ω—ã, –∏–Ω–∞—á–µ –ø–µ—Ä–≤–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.', example: 'SELECT NULLIF(col1, col2);', type: 'SQL', rarity: 'uncommon'},
    { id: 'sql_fetch_first_rows', name: 'FETCH FIRST N ROWS ONLY', emoji: '‚úÇÔ∏èüîù', description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å—Ç—Ä–æ–∫ (SQL:2008).', example: 'SELECT * FROM products ORDER BY price DESC FETCH FIRST 10 ROWS ONLY;', type: 'SQL', rarity: 'uncommon' },
    { id: 'sql_current_date', name: 'CURRENT_DATE', emoji: 'üìÖ', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É.', example: 'SELECT CURRENT_DATE;', type: 'SQL', rarity: 'common' },
    { id: 'sql_current_timestamp', name: 'CURRENT_TIMESTAMP', emoji: 'üìÖ‚è∞', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Å —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º.', example: 'SELECT CURRENT_TIMESTAMP;', type: 'SQL', rarity: 'common' },
    { id: 'sql_extract', name: 'EXTRACT()', emoji: 'üìÖ‚úÇÔ∏è', description: '–ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∞—Å—Ç—å –∏–∑ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏ (YEAR, MONTH, DAY –∏ —Ç.–¥.).', example: 'SELECT EXTRACT(YEAR FROM order_date) FROM orders;', type: 'SQL', rarity: 'uncommon' },
    { id: 'sql_cast', name: 'CAST()', emoji: 'üîÑ‚öñÔ∏è', description: '–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –¥—Ä—É–≥–æ–π.', example: 'SELECT CAST(\'123\' AS INT);', type: 'SQL', rarity: 'common' },
    { id: 'sql_convert', name: 'CONVERT()', emoji: 'üîÑüé®', description: '–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –º–æ–∂–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –°–£–ë–î, –æ—Å–æ–±–µ–Ω–Ω–æ SQL Server).', example: 'SELECT CONVERT(VARCHAR, GETDATE(), 103); (SQL Server)', type: 'SQL', rarity: 'uncommon', dbType: ['sqlserver'] },
    { id: 'sql_rowid', name: 'ROWID / OID', emoji: 'üìçüÜî', description: '–ü—Å–µ–≤–¥–æ—Å—Ç–æ–ª–±–µ—Ü, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–æ–∫–∏ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –°–£–ë–î).', example: 'SELECT ROWID, name FROM customers; (Oracle, PostgreSQL OID)', type: 'SQL', rarity: 'rare', dbType: ['oracle', 'postgresql'] },
    { id: 'sql_except', name: 'EXCEPT / MINUS', emoji: '‚ûñüìã', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤–æ –≤—Ç–æ—Ä–æ–º. (EXCEPT –≤ SQL Server/PostgreSQL, MINUS –≤ Oracle)', example: 'SELECT id FROM table1 EXCEPT SELECT id FROM table2;', type: 'SQL', rarity: 'rare' },
    { id: 'sql_intersect', name: 'INTERSECT', emoji: '‚à©üìã', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –æ–±–æ–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö.', example: 'SELECT id FROM table1 INTERSECT SELECT id FROM table2;', type: 'SQL', rarity: 'rare' },
    { id: 'sql_greatest_least', name: 'GREATEST() / LEAST()', emoji: '‚ÜïÔ∏èüî¢', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ/–Ω–∞–∏–º–µ–Ω—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.', example: 'SELECT GREATEST(10, 20, 5);', type: 'SQL', rarity: 'uncommon', dbType: ['postgresql', 'mysql', 'oracle'] },
    { id: 'sql_returning', name: 'RETURNING / OUTPUT', emoji: '‚Ü©Ô∏èüéÅ', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ (INSERT, UPDATE, DELETE). (RETURNING –≤ PostgreSQL/Oracle, OUTPUT –≤ SQL Server)', example: 'INSERT INTO users (name) VALUES (\'Test\') RETURNING id;', type: 'SQL', rarity: 'epic', dbType: ['postgresql', 'oracle', 'sqlserver'] },
    { id: 'sql_lateral_join', name: 'LATERAL JOIN', emoji: 'üîó‚û°Ô∏è', description: '–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–∑–∞–ø—Ä–æ—Å—É –≤ FROM —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–∞–±–ª–∏—Ü. (LATERAL –≤ PostgreSQL, APPLY –≤ SQL Server/Oracle)', example: 'SELECT u.name, p.product_name FROM users u, LATERAL (SELECT * FROM products WHERE user_id = u.id ORDER BY price DESC LIMIT 1) p;', type: 'SQL', rarity: 'epic', dbType: ['postgresql', 'sqlserver', 'oracle'] },
    { id: 'sql_values_constructor', name: 'VALUES Constructor', emoji: 'üß±üî¢', description: '–°–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –∏–∑ –Ω–∞–±–æ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏–π.', example: 'SELECT * FROM (VALUES (1, \'A\'), (2, \'B\')) AS t (id, val);', type: 'SQL', rarity: 'uncommon' },
    { id: 'sql_for_update', name: 'FOR UPDATE / OF', emoji: 'üîí‚úèÔ∏è', description: '–ë–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏–º–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏.', example: 'SELECT * FROM accounts WHERE id = 1 FOR UPDATE;', type: 'SQL', rarity: 'epic' },
    { id: 'sql_sequence', name: 'CREATE SEQUENCE', emoji: 'üî¢‚öôÔ∏è', description: '–°–æ–∑–¥–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.', example: 'CREATE SEQUENCE user_id_seq START WITH 100;', type: 'SQL', rarity: 'rare', dbType: ['postgresql', 'oracle', 'sqlserver'] },
    { id: 'sql_window_ntile', name: 'NTILE()', emoji: 'üìäüî™', description: '–†–∞–∑–¥–µ–ª—è–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø (–∫–≤–∞—Ä—Ç–∏–ª–∏, –¥–µ—Ü–∏–ª–∏ –∏ —Ç.–¥.).', example: 'SELECT name, salary, NTILE(4) OVER (ORDER BY salary DESC) AS quartile FROM employees;', type: 'SQL', rarity: 'rare'},
    { id: 'sql_window_first_value', name: 'FIRST_VALUE()', emoji: 'ü•áü™ü', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ.', example: 'SELECT name, department, salary, FIRST_VALUE(name) OVER (PARTITION BY department ORDER BY salary DESC) AS highest_paid FROM employees;', type: 'SQL', rarity: 'rare'},
    { id: 'sql_window_last_value', name: 'LAST_VALUE()', emoji: 'ü•âü™ü', description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ. (–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è —Ä–∞–º–∫–∏ –æ–∫–Ω–∞).', example: 'SELECT name, department, salary, LAST_VALUE(name) OVER (PARTITION BY department ORDER BY salary DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS lowest_paid_overall_in_dept FROM employees;', type: 'SQL', rarity: 'rare'}, // Emoji –∏–∑–º–µ–Ω–µ–Ω–æ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
    { id: 'sql_comments_single', name: '-- (Comment)', emoji: 'üí¨‚ûñ', description: '–û–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ SQL.', example: '-- –≠—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π \nSELECT * FROM users;', type: 'SQL', rarity: 'common'},
    { id: 'sql_comments_multi', name: '/* */ (Comment)', emoji: 'üí¨üß±', description: '–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ SQL.', example: '/* –≠—Ç–æ \n –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π \n –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */\nSELECT * FROM users;', type: 'SQL', rarity: 'common'}
];

const QUERY_CONSTRUCTION_TASKS = [
    {
        id: 'task_select_all_users',
        name: '–ü—Ä–æ—Å—Ç–∞—è –≤—ã–±–æ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        description: '–°–æ–∑–¥–∞–π—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤—Å–µ —Å—Ç–æ–ª–±—Ü—ã (`*`) –∏–∑ —Ç–∞–±–ª–∏—Ü—ã `Users`.',
        targetQueryStructure: [
            { keyword: 'SELECT', value: '*' },
            { keyword: 'FROM', value: 'Users' }
        ],
        requiredFunctions: ['sql_select', 'sql_from'],
        availableTables: ['Users', 'Products', 'Orders'],
        availableColumns: {
            'Users': ['UserID', 'UserName', 'Email'],
            'Products': ['ProductID', 'ProductName', 'Price'],
            'Orders': ['OrderID', 'CustomerID', 'OrderDate']
        },
        rewardXp: 15,
        unlocksNextTaskId: 'task_select_specific_columns'
    },
    {
        id: 'task_select_specific_columns',
        name: '–í—ã–±–æ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤',
        description: '–°–æ–∑–¥–∞–π—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å—Ç–æ–ª–±—Ü—ã `ProductName` –∏ `Price` –∏–∑ —Ç–∞–±–ª–∏—Ü—ã `Products`.',
        targetQueryStructure: [
            { keyword: 'SELECT', value: ['ProductName', 'Price'] },
            { keyword: 'FROM', value: 'Products' }
        ],
        requiredFunctions: ['sql_select', 'sql_from'],
        availableTables: ['Users', 'Products', 'Orders'],
        availableColumns: {
            'Users': ['UserID', 'UserName', 'Email'],
            'Products': ['ProductID', 'ProductName', 'Price'],
            'Orders': ['OrderID', 'CustomerID', 'OrderDate']
        },
        rewardXp: 20,
        unlocksNextTaskId: 'task_filter_products'
    },
    {
        id: 'task_filter_products',
        name: '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
        description: '–°–æ–∑–¥–∞–π—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å `ProductName` –∏–∑ —Ç–∞–±–ª–∏—Ü—ã `Products`, –≥–¥–µ `Price` –±–æ–ª—å—à–µ `100`.',
        targetQueryStructure: [
            { keyword: 'SELECT', value: 'ProductName' },
            { keyword: 'FROM', value: 'Products' },
            { keyword: 'WHERE', condition: { column: 'Price', operator: '>', value: 100 } }
        ],
        requiredFunctions: ['sql_select', 'sql_from', 'sql_where'],
        availableTables: ['Users', 'Products', 'Orders'],
        availableColumns: {
            'Products': ['ProductID', 'ProductName', 'Price']
        },
        rewardXp: 30,
        unlocksNextTaskId: 'task_join_tables'
    },
    {
        id: 'task_join_tables',
        name: '–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü',
        description: '–°–æ–∑–¥–∞–π—Ç–µ SQL-–∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å `Orders.OrderID` –∏ `Customers.CustomerName` –∏–∑ —Ç–∞–±–ª–∏—Ü `Orders` –∏ `Customers`, –æ–±—ä–µ–¥–∏–Ω–∏–≤ –∏—Ö –ø–æ `CustomerID`.',
        targetQueryStructure: [
            { keyword: 'SELECT', value: ['Orders.OrderID', 'Customers.CustomerName'] },
            { keyword: 'FROM', value: 'Orders' },
            { keyword: 'JOIN', joinTable: 'Customers', onCondition: 'Orders.CustomerID=Customers.CustomerID' }
        ],
        requiredFunctions: ['sql_select', 'sql_from', 'sql_join'],
        availableTables: ['Users', 'Products', 'Orders', 'Customers'],
        availableColumns: {
            'Users': ['UserID', 'UserName', 'Email'],
            'Products': ['ProductID', 'ProductName', 'Price'],
            'Orders': ['OrderID', 'CustomerID', 'OrderDate'],
            'Customers': ['CustomerID', 'CustomerName', 'City']
        },
        rewardXp: 50,
        unlocksNextTaskId: null
    }
];
